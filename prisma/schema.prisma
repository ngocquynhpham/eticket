// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator custom_generator {
    provider = "prisma-generator-fake-data"
    output   = "../types/fake-data.ts"
}
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.sqlite3"
}

// Danh má»¥c:
model TicketType {
  id       Int      @id @default(autoincrement())
  name     String
  note     String?
  isActive Boolean  @default(true)
  tickets  Ticket[]
}

model Department {
  id       Int      @id @default(autoincrement())
  name     String
  note     String?
  isActive Boolean  @default(true)
  tickets  Ticket[]
}

model Category {
  id       Int      @id @default(autoincrement())
  name     String
  note     String?
  isActive Boolean  @default(true)
  tickets  Ticket[]
}

model StatusTicket {
  id       Int      @id @default(autoincrement())
  name     String
  note     String?
  isActive Boolean  @default(true)
  tickets  Ticket[]
}

//  User 
model User {
  id         Int      @id @default(autoincrement())
  name       String
  externalId String   @unique
  isActive   Boolean  @default(true)
  tickets    Ticket[]
}

// Ticket
model Ticket {
  id           Int          @id @default(autoincrement())
  subject      String
  userID       Int
  user         User         @relation(fields: [userID], references: [id])
  statusID     Int
  status       StatusTicket @relation(fields: [statusID], references: [id])
  categoryID   Int
  category     Category     @relation(fields: [categoryID], references: [id])
  departmentID Int
  department   Department   @relation(fields: [departmentID], references: [id])
  ticketTypeID Int
  ticketType   TicketType   @relation(fields: [ticketTypeID], references: [id])
  content      String
  term         Boolean
  createdAt    DateTime     @default(now())
}
